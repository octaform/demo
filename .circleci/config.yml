version: 2

defaults: &defaults
  working_directory: ~/tmp
  docker:
    - image: circleci/node:10.11.0

  environment:
    NODE_ENV: ${APP_ENV}

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Restore local dependencies from cache
      - restore_cache:
          keys: 
            - yarn-packages-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - yarn-packages-

      # Install project dependencies
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      # Cache local dependencies if they don't exist
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Test the source code
      - run:
          name: Building
          command: yarn build:prod

      # Create and Save Artifact
      - run:
          name: Creating Artifacts
          command: |
            mkdir ./artifacts;
            zip -r ./artifacts/dist.zip dist/

      # Store Artifact
      - store_artifacts:
          path: ./artifacts/dist.zip

      - persist_to_workspace:
          root: ~/tmp
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tmp

      - add_ssh_keys:
          fingerprints: 
            - $GITHUB_TOKEN

      # Fix issue with github ssh host 
      # Reference: https://github.com/IntelAI/mlt/issues/466
      - run:
          name: SSH fix issue
          command: |
            mkdir -p ~/.ssh/
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile /dev/null\n" > ~/.ssh/config
            chmod 600 ~/.ssh/config
            ssh-keyscan -Ht rsa github.com >> ~/.ssh/known_hosts

      # Configure gh-pages dependencies
      - run:
          name: Install/Configure GIT credentials
          command: |
            git config user.email $GIT_EMAIL
            git config user.name "CircleCI"

      # Deploy to gh-pages
      - run:
          name: Deploy to gh-pages branch
          command: yarn deploy

workflows:
  version: 2
  # Build and test
  build_deploy:
    jobs:
      # Build application
      - build:
          filters:
            branches:
              ignore:
                - master

      # Publish to gh-pages
      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
